[project]
name = "robotpuzzle"
version = "1.2.2"
description = "Solve Exploding Robot Puzzle"
readme = "README.md"
authors = [
    { name = "Matt Martini", email = "matt.martini@gmail.com" }
]
requires-python = ">=3.13"
dependencies = [
    "rich>=13.9.4",
]

[dependency-groups]
dev = [
    "black>=24.10.0",
    "ruff>=0.7.4",
    "ruff-lsp>=0.0.58",
    "pdoc>=15.0.0",
    "flake8>=7.1.1",
    "flake8-pytest-style>=2.0.0",
    "bump-my-version>=0.28.1",
    "pytest>=8.3.3",
    "pytest-random-order>=1.1.1",
    "pylint>=3.3.1",
    "bpython>=0.24",
    "pytest-html>=4.1.1",
    "pytest-cov>=6.0.0",
    "pytest-sugar>=1.0.0",
]

[project.scripts]
puzzle = "robots:main"

# [build-system]
# requires = ["flit_core>=3.2,<4"]
# build-backend = "flit_core.buildapi"

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

# [tool.setuptools.packages]  # don't use, pulls in everything
# find = {}  # Scan the project directory with the default parameters

[tool.pytest.ini_options]
# pythonpath = "src"  # not needed?
testpaths = [ "tests", "intergration" ]
addopts = "-ra --showlocals --import-mode=importlib -v"
log_cli = true
log_cli_level = "DEBUG"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
minversion = "6.0"
filterwarnings = "ignore"
cache_dir = ".pytest_cache"
norecursedirs = ["docs", "build", "scratch" ]
markers = ["node","initial","multi","robots"]

[tool.black]
exclude = '''/
    # Default values for Black.
    \.eggs|\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|\.svn|_build|buck-out|build|dist
/'''


[pylint]
# Naming style matching correct constant names.
#const-naming-style=UPPER_CASE
const-naming-style="any"

# Naming style matching correct function names.
#function-naming-style=snake_case
function-naming-style="any"

# Naming style matching correct class names.
class-naming-style="PascalCase"

good-names=["i", "j", "k", "f", ]

# Naming style matching correct method names.
method-naming-style="snake_case"

# Naming style matching correct module names.
module-naming-style="snake_case"

# Naming style matching correct variable names.
#variable-naming-style=snake_case
variable-naming-style="any"

# Naming style matching correct argument names.
#argument-naming-style=snake_case
argument-naming-style="any"


[flake8]
ignore = ["E203", "E266", "E501", "W503", ]
max-line-length = "88"
max-complexity = "18"
select = ["B", "C", "E", "F", "W", "T4"]

[isort]
multi_line_output="3"
include_trailing_comma="True"
force_grid_wrap="0"
use_parentheses="True"
line_length="88"
